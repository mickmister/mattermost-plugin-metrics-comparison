// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-metrics-comparison/server/prometheus (interfaces: PrometheusClient)

// Package mock_prometheus is a generated GoMock package.
package mock_prometheus

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	prometheus "github.com/mattermost/mattermost-plugin-metrics-comparison/server/prometheus"
)

// MockPrometheusClient is a mock of PrometheusClient interface.
type MockPrometheusClient struct {
	ctrl     *gomock.Controller
	recorder *MockPrometheusClientMockRecorder
}

// MockPrometheusClientMockRecorder is the mock recorder for MockPrometheusClient.
type MockPrometheusClientMockRecorder struct {
	mock *MockPrometheusClient
}

// NewMockPrometheusClient creates a new mock instance.
func NewMockPrometheusClient(ctrl *gomock.Controller) *MockPrometheusClient {
	mock := &MockPrometheusClient{ctrl: ctrl}
	mock.recorder = &MockPrometheusClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrometheusClient) EXPECT() *MockPrometheusClientMockRecorder {
	return m.recorder
}

// Query mocks base method.
func (m *MockPrometheusClient) Query(arg0 string) (*prometheus.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query", arg0)
	ret0, _ := ret[0].(*prometheus.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query.
func (mr *MockPrometheusClientMockRecorder) Query(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*MockPrometheusClient)(nil).Query), arg0)
}
